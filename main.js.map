{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/cat-sets/cat-sets.component.css","webpack:///./src/app/components/cat-sets/cat-sets.component.html","webpack:///./src/app/components/cat-sets/cat-sets.component.ts","webpack:///./src/app/components/cats/cats.component.css","webpack:///./src/app/components/cats/cats.component.html","webpack:///./src/app/components/cats/cats.component.ts","webpack:///./src/app/components/seed/seed.component.css","webpack:///./src/app/components/seed/seed.component.html","webpack:///./src/app/components/seed/seed.component.ts","webpack:///./src/app/components/single-track/single-track.component.css","webpack:///./src/app/components/single-track/single-track.component.html","webpack:///./src/app/components/single-track/single-track.component.ts","webpack:///./src/app/components/track/track.component.css","webpack:///./src/app/components/track/track.component.html","webpack:///./src/app/components/track/track.component.ts","webpack:///./src/app/enums.ts","webpack:///./src/app/models/Cat.ts","webpack:///./src/app/models/GachaRoll.ts","webpack:///./src/app/models/GachaSet.ts","webpack:///./src/app/models/SeedGenerator.ts","webpack:///./src/app/models/Track.ts","webpack:///./src/app/models/TrackManager.ts","webpack:///./src/app/services/cat-set.service.ts","webpack:///./src/app/services/cat.service.ts","webpack:///./src/app/services/track.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<h1>{{title}}</h1>\\n<div class=\\\"container container-fluid\\\">\\n    <div class=\\\"row flex-xl\\\">\\n        <div class=\\\"col-12 col-xl-12\\\">\\n            <ngb-tabset>\\n                <ngb-tab title=\\\"Track\\\">\\n                    <ng-template ngbTabContent>\\n                        <app-seed></app-seed>\\n                        <app-track></app-track>\\n                    </ng-template>\\n                </ngb-tab>\\n                <ngb-tab title=\\\"Cat Sets\\\">\\n                    <ng-template ngbTabContent>\\n                        <app-cat-sets></app-cat-sets>\\n                    </ng-template>\\n                </ngb-tab>\\n            </ngb-tabset>\\n        </div>\\n    </div>\\n</div>\\n<!-- <app-cat-sets></app-cat-sets>\\n<app-cats></app-cats> -->\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Battle Cats Seed Tracker';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule }    from '@angular/common/http';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { AppComponent } from './app.component';\nimport { CatsComponent } from './components/cats/cats.component';\nimport { CatSetsComponent } from './components/cat-sets/cat-sets.component';\nimport { TrackComponent } from './components/track/track.component';\nimport { SeedComponent } from './components/seed/seed.component';\nimport { SingleTrackComponent } from './components/single-track/single-track.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CatsComponent,\n    CatSetsComponent,\n    TrackComponent,\n    SeedComponent,\n    SingleTrackComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    NgbModule.forRoot(),\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"form-group col-xs-2\\\">\\n    <label>Select Gacha</label>\\n    <select [(ngModel)]=\\\"selectedSet\\\"\\n            class=\\\"form-control\\\">\\n      <option *ngFor=\\\"let gacha of catSets\\\" \\n              [ngValue]=\\\"gacha\\\">\\n              {{gacha.name}}\\n      </option>\\n    </select>\\n</div>\\n<div *ngIf=\\\"selectedSet\\\">\\n  <div class=\\\"row\\\">\\n    <label class=\\\"col-lg-4\\\">Uber Rare: {{selectedSet.uberRarePercent}}%</label>\\n    <label class=\\\"col-lg-4\\\">Super Rare: {{selectedSet.superAndUberRarePercent - selectedSet.uberRarePercent}}%</label>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-4\\\">\\n      Uber Rares\\n      <div *ngFor=\\\"let cat of selectedSet.uberRareCats; let i = index\\\">\\n        {{i}}: {{cat.name}}\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-4\\\">\\n      Super Rares\\n      <div *ngFor=\\\"let cat of selectedSet.superRareCats; let i = index\\\">\\n        {{i}}: {{cat.name}}\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-4\\\">\\n      Rares\\n      <div *ngFor=\\\"let cat of selectedSet.rareCats; let i = index\\\">\\n        {{i}}: {{cat.name}}\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { IGachaSet } from \"../../interfaces/IGachaSet\";\nimport { CatSetService } from \"../../services/cat-set.service\";\n\n@Component({\n  selector: 'app-cat-sets',\n  templateUrl: './cat-sets.component.html',\n  styleUrls: ['./cat-sets.component.css']\n})\nexport class CatSetsComponent implements OnInit {\n  catSets: IGachaSet[];\n  selectedSet: IGachaSet;\n\n  constructor(private catSetService: CatSetService) { \n    this.catSetService.getSets().subscribe(s => {this.catSets = s; console.log(s)});\n  }\n\n  ngOnInit() {\n  }\n\n  onSelect(set: IGachaSet) {\n    this.selectedSet = set;\n  }\n}\n","module.exports = \".selected {\\r\\n    background-color: #CFD8DC !important;\\r\\n    color: white;\\r\\n  }\\r\\n  .cats {\\r\\n    margin: 0 0 2em 0;\\r\\n    list-style-type: none;\\r\\n    padding: 0;\\r\\n    width: 15em;\\r\\n  }\\r\\n  .cats li {\\r\\n    cursor: pointer;\\r\\n    position: relative;\\r\\n    left: 0;\\r\\n    background-color: #EEE;\\r\\n    margin: .5em;\\r\\n    padding: .3em 0;\\r\\n    height: 1.6em;\\r\\n    border-radius: 4px;\\r\\n  }\\r\\n  .cats li.selected:hover {\\r\\n    background-color: #BBD8DC !important;\\r\\n    color: white;\\r\\n  }\\r\\n  .cats li:hover {\\r\\n    color: #607D8B;\\r\\n    background-color: #DDD;\\r\\n    left: .1em;\\r\\n  }\\r\\n  .cats .text {\\r\\n    position: relative;\\r\\n    /* top: -3px; */\\r\\n  }\\r\\n  .cats .badge {\\r\\n    display: inline-block;\\r\\n    font-size: small;\\r\\n    color: white;\\r\\n    padding: 0.8em 0.7em 0 0.7em;\\r\\n    background-color: #607D8B;\\r\\n    line-height: 1em;\\r\\n    position: relative;\\r\\n    left: -1px;\\r\\n    top: -4px;\\r\\n    height: 1.8em;\\r\\n    margin-right: .8em;\\r\\n    border-radius: 4px 0 0 4px;\\r\\n  }\"","module.exports = \"<h2>Cats</h2>\\n<ul>\\n  <li *ngFor=\\\"let cat of cats\\\"\\n      (click)=\\\"onSelect(cat)\\\">\\n    \\n    <h3>{{cat.name}}</h3>\\n    <div *ngIf=\\\"selectedCat && selectedCat === cat\\\">\\n        <span>ID: {{selectedCat.id}}, Rarity: {{selectedCat.rarityString}}</span>\\n    </div>\\n  </li>\\n</ul>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ICat} from \"../../interfaces/ICat\";\nimport {CatService} from \"../../services/cat.service\";\n\n@Component({\n  selector: 'app-cats',\n  templateUrl: './cats.component.html',\n  styleUrls: ['./cats.component.css']\n})\nexport class CatsComponent implements OnInit {\n  cats: ICat[];\n  selectedCat: ICat;\n\n  constructor(private catService: CatService) { }\n\n  ngOnInit() {\n    this.getCats();\n  }\n\n  getCats() {\n    this.catService.getCats().subscribe(cats => this.cats = cats);\n  }\n\n  onSelect(cat: ICat): void {\n    this.selectedCat = cat;\n  }\n}\n","module.exports = \"\"","module.exports = \"<div>\\n  <form (ngSubmit)=\\\"updateSeed()\\\" #seedForm=\\\"ngForm\\\">\\n    <div class=\\\"form-group col-xs-3\\\">\\n      <label for=\\\"seed\\\">Seed</label>\\n      <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"seed\\\" name=\\\"seed\\\"\\n        [(ngModel)]=\\\"seed\\\">\\n    </div>\\n  </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { TrackService } from '../../services/track.service';\n\n@Component({\n  selector: 'app-seed',\n  templateUrl: './seed.component.html',\n  styleUrls: ['./seed.component.css']\n})\nexport class SeedComponent implements OnInit {\n  public seed = 0;\n\n  constructor(private trackService: TrackService) { }\n\n  ngOnInit() {\n    this.trackService.seed.subscribe(seed => this.seed = seed);\n  }\n\n  updateSeed() {\n    if (this.seed === null)\n      return;\n    console.log(`Updated seed to ${this.seed}`);\n    this.trackService.updateSeed(this.seed);\n    if (this.trackService.trackManager.trackA.rolls.length === 0) {\n      this.trackService.addRows(100);\n    }\n    console.log(this.trackService.trackManager);\n  }\n}\n","module.exports = \".superRare {\\r\\n    background-color: #bee5eb;\\r\\n}\\r\\n\\r\\n.possibleUber {\\r\\n    background-color: #ffeeba;\\r\\n}\\r\\n\\r\\n.uberRare {\\r\\n    background-color: #c3e6cb;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"track\\\">\\n    <h2>Track {{track.id}}</h2>\\n    <table class=\\\"table table-bordered table-hover\\\">\\n      <thead>\\n        <th>Roll</th>\\n        <th>Score</th>\\n        <th>Rarity</th>\\n        <th>Cat</th>\\n        <th>Guaranteed Uber</th>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let roll of track.rolls; let i = index\\\">\\n          <th scope=\\\"row\\\">{{roll.id}}</th>\\n          <td [ngClass]=\\\"scoreClass(roll)\\\">\\n            {{roll.score}}\\n          </td>\\n          <td [ngClass]=\\\"rarityClass(roll.rolledCats[selectedGacha.name].cat.rarity)\\\">\\n            {{roll.rolledCats[selectedGacha.name].cat.rarityString}}\\n          </td>\\n          <td>{{roll.rolledCats[selectedGacha.name].cat.name}}</td>\\n          <td>\\n            <div *ngIf=\\\"i+garUberOffset < track.rolls.length\\\">\\n              {{track.rolls[i+garUberOffset].rolledCats[selectedGacha.name].guaranteedUber.name}}\\n            </div>\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n</div>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { ITrack } from '../../interfaces/ITrack';\nimport { Rarity } from '../../enums';\nimport { IGachaSet } from '../../interfaces/IGachaSet';\nimport { IGachaRoll } from '../../interfaces/IGachaRoll';\n\n@Component({\n  selector: 'app-single-track',\n  templateUrl: './single-track.component.html',\n  styleUrls: ['./single-track.component.css']\n})\nexport class SingleTrackComponent implements OnInit {\n  @Input() track: ITrack;\n  @Input() garUberOffset: number;\n  @Input() selectedGacha: IGachaSet;\n\n  private rarityClasses : {[rarity: number]: string; } = {};\n\n  constructor() { \n    this.rarityClasses[Rarity.NonGacha] = \"nonGacha\";\n    this.rarityClasses[Rarity.Rare] = \"rare\";\n    this.rarityClasses[Rarity.SuperRare] = \"superRare\";\n    this.rarityClasses[Rarity.UberRare] = \"uberRare\";\n  }\n\n  ngOnInit() {\n  }\n\n  scoreClass(roll: IGachaRoll): string {\n    if (roll.allUbers) return \"uberRare\";\n    if (roll.hasUbers) return \"possibleUber\";\n    return \"\";\n  }\n  \n  rarityClass(rarity: Rarity): string {\n    return this.rarityClasses[rarity];\n  }\n}\n","module.exports = \".tracks {\\r\\n    display: flex;\\r\\n}\\r\\n\\r\\n.track {\\r\\n    flex: 50%;\\r\\n    white-space: nowrap;\\r\\n}\\r\\n\\r\\n.superRare {\\r\\n    color: rgb(137, 231, 137);\\r\\n}\\r\\n\\r\\n.uberRare {\\r\\n    color: white;\\r\\n    background-color: darkgreen;\\r\\n}\"","module.exports = \"<div *ngIf=\\\"trackService.trackManager\\\">\\n  <div class=\\\"form-group col-xs-2\\\">\\n    <label>Select Gacha</label>\\n    <select [(ngModel)]=\\\"selectedGacha\\\"\\n            (ngModelChange)=\\\"onSelectedGachaChanged($event)\\\"\\n            class=\\\"form-control\\\">\\n      <option *ngFor=\\\"let gacha of trackService.trackManager.gachas\\\" \\n              [ngValue]=\\\"gacha\\\">\\n              {{gacha.name}}\\n      </option>\\n    </select>\\n  </div>\\n  <div class=\\\"form-group row\\\"></div>\\n\\n  <div class=\\\"tracks\\\" *ngIf=\\\"selectedGacha\\\">\\n      <app-single-track class=\\\"track\\\" \\n      [track]=\\\"trackService.trackManager.trackA\\\" \\n      [garUberOffset]=\\\"garUberOffset\\\"\\n      [selectedGacha]=\\\"selectedGacha\\\">\\n    </app-single-track>\\n    <app-single-track class=\\\"track\\\" \\n      [track]=\\\"trackService.trackManager.trackB\\\" \\n      [garUberOffset]=\\\"garUberOffset\\\"\\n      [selectedGacha]=\\\"selectedGacha\\\">\\n    </app-single-track>\\n  </div>\\n\\n  <div>\\n      <button class=\\\"btn btn-primary\\\" (click)=\\\"addRows(100)\\\">Add 100 Rows</button>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { TrackService } from '../../services/track.service';\nimport { IGachaSet } from '../../interfaces/IGachaSet';\n\n@Component({\n  selector: 'app-track',\n  templateUrl: './track.component.html',\n  styleUrls: ['./track.component.css']\n})\nexport class TrackComponent implements OnInit {\n  public selectedGacha: IGachaSet = null;\n  public garUberOffset = 10;\n  private selectedGachaKey = \"battlecats.selectedGacha\";\n\n  constructor(public trackService: TrackService) {\n    this.trackService.isReady.subscribe(ready => {\n      if (this.selectedGacha === null && ready)\n        this.selectedGacha = this.fetchSelectedGacha();\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  addRows(count: number = 100) {\n    console.log(\"Adding rows\")\n    this.trackService.addRows(count);\n    console.log(this.trackService.trackManager);\n  }\n\n  onSelectedGachaChanged(selectedGacha: IGachaSet) {\n    this.saveSelectedGacha(selectedGacha);\n  }\n\n  private fetchSelectedGacha(): IGachaSet {\n    let gachaName = localStorage.getItem(this.selectedGachaKey);\n    let gachaIndex = this.trackService.trackManager.gachas.findIndex(s => s.name == gachaName);\n    if (gachaIndex < 0)\n      gachaIndex = 0;\n\n    return this.trackService.trackManager.gachas[gachaIndex];\n  }\n\n  private saveSelectedGacha(set: IGachaSet) {\n    localStorage.setItem(this.selectedGachaKey, set.name);\n  }\n}\n","\r\nexport enum Rarity {\r\n    NonGacha = -1,\r\n    Rare = 0,\r\n    SuperRare = 1,\r\n    UberRare = 2\r\n}\r\n","import { ICat } from \"../interfaces/ICat\";\r\nimport { Rarity } from \"../enums\";\r\n\r\n\r\nvar rarityStrings : {[rarity: number]: string; } = {};\r\nrarityStrings[Rarity.NonGacha] = \"Non-Gacha\";\r\nrarityStrings[Rarity.Rare] = \"Rare\";\r\nrarityStrings[Rarity.SuperRare] = \"Super Rare\";\r\nrarityStrings[Rarity.UberRare] = \"Uber Rare\";\r\n\r\n\r\nexport class Cat implements ICat {\r\n    rarityString: string;\r\n\r\n    constructor(public id: number, public name: string, public rarity: Rarity) {\r\n        this.name = name;\r\n        this.rarity = rarity;\r\n        this.rarityString = rarityStrings[this.rarity];\r\n    }\r\n}\r\n","import { IGachaRoll, ICatSelection, IGachaCatRoll } from \"../interfaces/IGachaRoll\";\r\nimport { IGachaSet } from \"../interfaces/IGachaSet\";\r\nimport { ICat } from \"../interfaces/ICat\";\r\nimport { Rarity } from \"../enums\";\r\n\r\n\r\n\r\nexport class GachaRoll implements IGachaRoll {\r\n    id: string;\r\n    scoreSeed: number;\r\n    slotSeed: number;\r\n    guaranteedUberSeed: number;\r\n    score: number;\r\n    rolledCats: ICatSelection[] = [];\r\n    hasUbers: boolean = false;\r\n    allUbers: boolean = false;\r\n\r\n    constructor(gachaSets: IGachaSet[], id: string, scoreSeed: number, slotSeed: number, guaranteedUberSeed: number) {\r\n        this.id = id;\r\n        this.scoreSeed = scoreSeed;\r\n        this.slotSeed = slotSeed;\r\n        this.guaranteedUberSeed = guaranteedUberSeed;\r\n        this.score = Math.abs(scoreSeed) % 10000;\r\n        this.hasUbers = false;\r\n        this.allUbers = true;\r\n        \r\n        for (let i = 0; i < gachaSets.length; i++) {\r\n            let gacha = gachaSets[i];\r\n            let catSelection = this.getCatSelection(gacha);\r\n            this.rolledCats[gacha.name] = catSelection;\r\n\r\n            if (catSelection.cat.rarity === Rarity.UberRare) {\r\n                this.hasUbers = true;\r\n            }\r\n            else {\r\n                this.allUbers = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    private getCatSelection(gacha: IGachaSet): IGachaCatRoll {\r\n        let cats: ReadonlyArray<ICat>;\r\n        if (this.score > gacha.uberRareThreshold) {\r\n            cats = gacha.uberRareCats;\r\n        }\r\n        else if (this.score > gacha.superAndUberRareThreshold) {\r\n            cats = gacha.superRareCats;\r\n        }\r\n        else {\r\n            cats = gacha.rareCats;\r\n        }\r\n\r\n        let catSlot = Math.abs(this.slotSeed) % cats.length;\r\n        let cat = cats[catSlot];\r\n\r\n        let garUberSlot = Math.abs(this.guaranteedUberSeed) % gacha.uberRareCats.length;\r\n        let garUberCat = gacha.uberRareCats[garUberSlot];\r\n\r\n        let catSelection: IGachaCatRoll = {\r\n            cat: cat,\r\n            guaranteedUber: garUberCat,\r\n            slot: catSlot,\r\n            guaranteedUberSlot: garUberSlot,\r\n            gacha: gacha\r\n        }\r\n\r\n        return catSelection;\r\n    }\r\n}","import { IGachaSet } from \"../interfaces/IGachaSet\";\r\nimport { ICat } from \"../interfaces/ICat\";\r\nimport { Rarity } from \"../enums\";\r\n\r\nexport class GachaJsonData {\r\n    name: string;\r\n    uberRarePercent: number;\r\n    superAndUberRarePercent: number;\r\n    catIds: number[]\r\n}\r\n\r\nexport class GachaSet implements IGachaSet {\r\n    name: string;\r\n    uberRarePercent: number;\r\n    superAndUberRarePercent: number;\r\n    uberRareThreshold: number;\r\n    superAndUberRareThreshold: number;\r\n    rareCats: ReadonlyArray<ICat>;\r\n    superRareCats: ReadonlyArray<ICat>;\r\n    uberRareCats: ReadonlyArray<ICat>;\r\n\r\n    private rares: ICat[] = [];\r\n    private supers: ICat[] = [];\r\n    private ubers: ICat[] = []\r\n\r\n    constructor(jsonData: GachaJsonData, cats: ICat[]) {\r\n        this.name = jsonData.name;\r\n        this.uberRarePercent = jsonData.uberRarePercent;\r\n        this.superAndUberRarePercent = jsonData.superAndUberRarePercent;\r\n        this.uberRareThreshold = (100 - this.uberRarePercent) * 100;\r\n        this.superAndUberRareThreshold = (100 - this.superAndUberRarePercent) * 100;\r\n\r\n        this.rareCats = this.rares;\r\n        this.superRareCats = this.supers;\r\n        this.uberRareCats = this.ubers;\r\n\r\n        for (let i = 0; i < jsonData.catIds.length; i++) {\r\n            const id = jsonData.catIds[i];\r\n            let cat = cats.find(c => c.id === id);\r\n            if (cat === null) {\r\n                console.log(`Unable to find cat id ${id} in gacha set ${this.name}`);\r\n            }\r\n            else if (cat.rarity == Rarity.Rare) {\r\n                this.rares.push(cat);\r\n            }\r\n            else if (cat.rarity == Rarity.SuperRare) {\r\n                this.supers.push(cat);\r\n            }\r\n            else if (cat.rarity == Rarity.UberRare) {\r\n                this.ubers.push(cat);\r\n            }\r\n            else {\r\n                console.log(`unknown cat rarity ${cat.rarity} in gacha set ${this.name}`);\r\n            }\r\n        }\r\n    }\r\n}","import { ISeedGenerator } from \"../interfaces/ISeedGenerator\";\r\n\r\nexport class SeedGenerator implements ISeedGenerator {\r\n    currentSeed: number;\r\n\r\n    constructor(public rootSeed: number) {\r\n        this.currentSeed = rootSeed;\r\n    }\r\n\r\n    generate(count: number = 1): number[] {\r\n        let seeds: number[];\r\n        seeds = [];\r\n        for (let i = 0; i < count; i++) {\r\n            this.currentSeed = this.getNext(this.currentSeed);\r\n            seeds.push(this.currentSeed);\r\n        }\r\n        return seeds;\r\n    }\r\n\r\n    reset(seed?: number): void {\r\n        if (seed) {\r\n            this.rootSeed = seed;\r\n        }\r\n        this.currentSeed = this.rootSeed;\r\n    }\r\n\r\n    private getNext(seed: number): number {\r\n        seed ^= seed << 13;\r\n        seed ^= seed >> 17;\r\n        seed ^= seed << 15;\r\n        return seed;\r\n    }\r\n}","import { ITrack } from \"../interfaces/ITrack\";\r\nimport { IGachaRoll } from \"../interfaces/IGachaRoll\";\r\nimport { IGachaSet } from \"../interfaces/IGachaSet\";\r\nimport { GachaRoll } from \"./GachaRoll\";\r\n\r\nexport class Track implements ITrack {\r\n    rolls: IGachaRoll[] = [];\r\n    \r\n    constructor(public id: string, private gachas: IGachaSet[]) {\r\n    }\r\n\r\n    roll(scoreSeed: number, slotSeed: number, guaranteedUberSeed: number) {\r\n        let id = `${this.id}${this.rolls.length + 1}`;\r\n        this.rolls.push(new GachaRoll(this.gachas, id, scoreSeed, slotSeed, guaranteedUberSeed));\r\n    }\r\n    \r\n    clear() {\r\n        this.rolls = [];\r\n    }\r\n}\r\n","import { ITrackManager } from \"../interfaces/ITrackManager\";\r\nimport { Track } from \"./Track\";\r\nimport { ITrack } from \"../interfaces/ITrack\";\r\nimport { IGachaSet } from \"../interfaces/IGachaSet\";\r\nimport { ISeedGenerator } from \"../interfaces/ISeedGenerator\";\r\n\r\nexport class TrackManager implements ITrackManager {\r\n    trackA: ITrack;\r\n    trackB: ITrack;\r\n\r\n    constructor(private seedGenerator: ISeedGenerator, public gachas: IGachaSet[]) {\r\n        this.trackA = new Track(\"A\", gachas);\r\n        this.trackB = new Track(\"B\", gachas);\r\n    }\r\n\r\n    updateSeed(seed: number) {\r\n        let currentRollCount = this.trackA.rolls.length;\r\n        this.seedGenerator.reset(seed);\r\n        this.trackA.clear();\r\n        this.trackB.clear();\r\n        this.addRolls(currentRollCount);\r\n    }\r\n\r\n    addRolls(count: number) {\r\n        let initSeed = this.seedGenerator.currentSeed;\r\n        let seeds = this.seedGenerator.generate(count * 2);\r\n        seeds.unshift(initSeed);\r\n        for (let i = 0; i < seeds.length - 2; i += 2) {\r\n            this.trackA.roll(seeds[i], seeds[i + 1], seeds[i]);\r\n            this.trackB.roll(seeds[i + 1], seeds[i + 2], seeds[i + 1]);\r\n        }\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map, mergeMap } from 'rxjs/operators';\nimport { CatService } from './cat.service';\nimport { GachaSet, GachaJsonData} from '../models/GachaSet';\nimport { IGachaSet } from \"../interfaces/IGachaSet\";\nimport { ICat } from \"../interfaces/ICat\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CatSetService {\n  private dbString = \"assets/cat_sets.json\";\n\n  constructor(private http: HttpClient, private catService: CatService) { }\n\n  getSets(): Observable<IGachaSet[]> {\n    console.log(\"Getting sets..\")\n    return this.catService.getCats()\n      .pipe(mergeMap(cats => this.getSetData(cats)));\n  }\n\n  private getSetData(cats: ICat[]): Observable<IGachaSet[]> {\n    return this.http.get<GachaJsonData[]>(this.dbString)\n      .pipe(map(sets => {\n        let newSets: IGachaSet[] = [];\n\n        sets.forEach(s => newSets.push(new GachaSet(s, cats)));\n        return newSets;\n      }));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Cat } from \"../models/Cat\";\nimport { ICat } from \"../interfaces/ICat\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CatService {\n  private dbString = \"assets/cats.json\";\n\n  constructor(private http: HttpClient) {\n  }\n\n  getCats(): Observable<ICat[]> {\n    return this.http.get<Cat[]>(this.dbString)\n    .pipe(map(cats => {\n      let newCats: Cat[] = [];\n      cats.forEach(c => newCats.push(new Cat(c.id, c.name, c.rarity)));\n      return newCats;\n    }));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ISeedGenerator } from '../interfaces/ISeedGenerator';\nimport { ITrackManager } from '../interfaces/ITrackManager';\nimport { SeedGenerator } from '../models/SeedGenerator';\nimport { TrackManager } from '../models/TrackManager';\nimport { CatSetService } from './cat-set.service';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TrackService {\n  private seedGenerator: ISeedGenerator;\n  private seedSubject: BehaviorSubject<number> = new BehaviorSubject<number>(0);\n  private readySubject: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n  private seedKey = \"battlecats.seed\";\n  public seed: Observable<number> = this.seedSubject.asObservable();\n  public trackManager: ITrackManager;\n  public isReady: Observable<boolean> = this.readySubject.asObservable();\n\n\n  constructor(public catSetService: CatSetService) { \n    let seed = this.fetchSeed();\n    this.seedGenerator = new SeedGenerator(seed);\n    this.seedSubject.next(seed);\n    catSetService.getSets().subscribe(sets => {\n      this.trackManager = new TrackManager(this.seedGenerator, sets);\n      this.addRows();\n      this.readySubject.next(true);\n    });\n  }\n\n  addRows(count: number = 100) {\n    if (this.trackManager === null)\n      return;\n    this.trackManager.addRolls(count);\n  }\n\n  updateSeed(seed: number) {\n    if (this.trackManager === null) \n      return;\n    localStorage.setItem(this.seedKey, String(seed));\n    this.trackManager.updateSeed(seed);\n    this.seedSubject.next(seed);\n  }\n\n  private fetchSeed(): number {\n    return +localStorage.getItem(this.seedKey);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}